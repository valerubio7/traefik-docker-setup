# ============================================
# MIDDLEWARES GLOBALES
# ============================================
# Estos middlewares se pueden reutilizar en cualquier router
#
# ⚠️  SEGURIDAD EN DESARROLLO:
# Los middlewares dev-* en config/dynamic/dev/middlewares.yml son PERMISIVOS
# para facilitar debugging. SIEMPRE revisar antes de producción:
#
# • dev-cors: Permite "*" (todos los orígenes)
# • dev-security: CSP permisivo ('unsafe-inline' 'unsafe-eval')
# • dev-security-strict: Versión más similar a producción (testear con esto)
# • dev-cors-strict: Orígenes específicos (para APIs críticas)
#
# Ver: config/dynamic/SECURITY_HEADERS_GUIDE.md

http:
  middlewares:
    # ==========================================
    # SEGURIDAD - Headers de seguridad HTTP
    # ==========================================
    security-headers:
      headers:
        # Previene clickjacking
        frameDeny: true
        # Fuerza HTTPS en navegadores
        sslRedirect: true
        # HSTS - HTTP Strict Transport Security
        stsSeconds: 31536000
        stsIncludeSubdomains: true
        stsPreload: true
        # Previene MIME type sniffing
        contentTypeNosniff: true
        # Protección XSS
        browserXssFilter: true
        # Referrer policy
        referrerPolicy: "strict-origin-when-cross-origin"
        # Permissions policy (antigua feature policy)
        permissionsPolicy: "geolocation=(), microphone=(), camera=()"
        # Content Security Policy básica
        customFrameOptionsValue: "SAMEORIGIN"

    # ==========================================
    # CORS - Para APIs públicas
    # ==========================================
    cors-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
        accessControlAllowOriginList:
          - "*"  # Cambiar por dominios específicos en producción
        accessControlAllowHeaders:
          - "Content-Type"
          - "Authorization"
          - "X-Requested-With"
        accessControlMaxAge: 100
        addVaryHeader: true

    # ==========================================
    # RATE LIMITING - Protección contra abusos
    # ==========================================
    # ⚠️  CRÍTICO: Ajustar según tu capacidad de infraestructura
    #
    # Recomendaciones:
    # • APIs públicas: 10-20 req/s
    # • Apps internas: 50 req/s
    # • Current: 100 req/s es ALTO (debería ser 20-30)
    #
    # El rate limiting ACTUAL está DEMASIADO PERMISIVO
    # Un DDoS básico puede saturar el servidor
    
    rate-limit:
      rateLimit:
        average: 30   # 30 requests por segundo (REDUCIDO de 100)
        burst: 60     # Hasta 60 requests en burst (REDUCIDO de 200)
        period: 1s

    # Rate limit más estricto para APIs sensibles
    rate-limit-strict:
      rateLimit:
        average: 10   # 10 requests por segundo (bueno para APIs)
        burst: 20     # Hasta 20 requests en burst
        period: 1s

    # Rate limit para APIs públicas (muy restrictivo)
    rate-limit-public:
      rateLimit:
        average: 5    # 5 requests por segundo
        burst: 10     # Hasta 10 requests en burst
        period: 1s
        sourceCriterion:
          ipStrategy:
            depth: 1  # Usar IP del cliente (no forwarded)

    # Rate limit para apps internas (más permisivo)
    rate-limit-internal:
      rateLimit:
        average: 50   # 50 requests por segundo
        burst: 100    # Hasta 100 requests en burst
        period: 1s

    # ==========================================
    # COMPRESIÓN - Reduce tamaño de respuestas
    # ==========================================
    compression:
      compress:
        excludedContentTypes:
          - "text/event-stream"

    # ==========================================
    # RETRY - Reintentos automáticos
    # ==========================================
    retry:
      retry:
        attempts: 3
        initialInterval: 100ms

    # ==========================================
    # REDIRECTS - Específicos de entorno
    # ==========================================
    # NOTA: redirect-to-https se define SOLO en prod/middlewares.yml
    # No incluir aquí para evitar conflictos entre dev y prod

    # Redirección www -> non-www (aplicable en ambos entornos)
    redirect-non-www:
      redirectRegex:
        regex: "^https://www\\.(.+)"
        replacement: "https://${1}"
        permanent: true

    # ==========================================
    # AUTENTICACIÓN BÁSICA (ejemplos)
    # ==========================================
    # Genera passwords con: htpasswd -nb usuario password
    auth-basic:
      basicAuth:
        users:
          - "admin:$apr1$..."  # Cambiar por hash real

    # ==========================================
    # IP WHITELIST - Restricción por IP
    # ==========================================
    ip-whitelist-local:
      ipWhiteList:
        sourceRange:
          - "127.0.0.1/32"
          - "192.168.0.0/16"
          - "10.0.0.0/8"
          - "172.16.0.0/12"

    # ==========================================
    # CUSTOM HEADERS - Headers personalizados
    # ==========================================
    api-headers:
      headers:
        customResponseHeaders:
          X-Custom-Response-Header: "value"
        customRequestHeaders:
          X-Custom-Request-Header: "value"

    # ==========================================
    # BUFFERING - Para uploads grandes
    # ==========================================
    buffering:
      buffering:
        maxRequestBodyBytes: 10485760  # 10MB
        memRequestBodyBytes: 2097152   # 2MB
        maxResponseBodyBytes: 10485760
        memResponseBodyBytes: 2097152
        retryExpression: "IsNetworkError() && Attempts() < 2"