services:
  traefik:
    # Añade volúmenes específicos de producción
    volumes:
      # Configuración estática de producción
      - ./config/traefik.prod.yml:/etc/traefik/traefik.prod.yml:ro
      
      # Configuración dinámica de producción
      - ./config/dynamic/prod:/etc/traefik/dynamic/prod:ro
      
      # Logs específicos de producción
      - ./logs/prod:/var/log/traefik/prod
      
      # Certificados de Let's Encrypt (read-write porque se renuevan automáticamente)
      - ./certs/prod:/etc/traefik/certs/prod
    
    # IMPORTANTE: En producción, conectar a socket-proxy (no socket de Docker directo)
    networks:
      - traefik-public
      - traefik-proxy    # Red privada del socket proxy
    
    # Variables de entorno específicas de producción
    environment:
      - ENVIRONMENT=prod
      - TRAEFIK_LOG_LEVEL=${LOG_LEVEL:-WARN}
      # CRÍTICO: Validar que LETSENCRYPT_EMAIL no esté vacío
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:?Error: LETSENCRYPT_EMAIL no está definido en .env}
      # CRÍTICO: Validar que PROD_DOMAIN no esté vacío
      - PROD_DOMAIN=${PROD_DOMAIN:?Error: PROD_DOMAIN no está definido en .env}
    
    # En producción, NO exponemos el dashboard directamente
    # Solo lo hacemos accesible mediante un subdominio protegido
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
      # NO exponer 8080 en producción
    
    # Labels para dashboard protegido en producción
    labels:
      # ==========================================
      # DASHBOARD - AUTENTICACIÓN + RATE LIMIT + IP WHITELIST
      # ==========================================
      
      # Router HTTPS (seguro)
      - "traefik.http.routers.dashboard-secure.rule=Host(`traefik.${PROD_DOMAIN}`)"
      - "traefik.http.routers.dashboard-secure.service=api@internal"
      - "traefik.http.routers.dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.dashboard-secure.tls=true"
      - "traefik.http.routers.dashboard-secure.tls.certresolver=letsencrypt"
      
      # Middlewares de seguridad en cadena
      # Orden: IP Whitelist → Rate Limit → Auth → Security Headers
      - "traefik.http.routers.dashboard-secure.middlewares=dashboard-ipwhitelist,dashboard-ratelimit,dashboard-auth,dashboard-security"
      
      # 1. IP WHITELIST - Solo IPs permitidas pueden acceder
      # Reemplazar IPs según tu infraestructura
      - "traefik.http.middlewares.dashboard-ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32,10.0.0.0/8"
      # sourcerange: IPs permitidas (localhost + redes internas)
      # Agregar IPs oficina/VPN: 203.0.113.0/24
      
      # 2. RATE LIMIT - Proteger contra fuerza bruta
      - "traefik.http.middlewares.dashboard-ratelimit.ratelimit.average=5"
      # Máximo 5 requests por segundo (suficiente para humanos)
      - "traefik.http.middlewares.dashboard-ratelimit.ratelimit.burst=10"
      # Permite burst de 10 requests
      - "traefik.http.middlewares.dashboard-ratelimit.ratelimit.period=1s"
      
      # 3. AUTENTICACIÓN BÁSICA
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD}"
      # Usuario/password desde .env (hasheado con bcrypt)
      
      # 4. SECURITY HEADERS
      - "traefik.http.middlewares.dashboard-security.headers.customFrameOptionsValue=DENY"
      # X-Frame-Options: DENY (no iframe)
      - "traefik.http.middlewares.dashboard-security.headers.customResponseHeaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.dashboard-security.headers.customResponseHeaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.dashboard-security.headers.customResponseHeaders.Strict-Transport-Security=max-age=31536000; includeSubDomains"
      # HSTS: forzar HTTPS por 1 año
      
      # Router HTTP (redirección)
      - "traefik.http.routers.dashboard-http.rule=Host(`traefik.${PROD_DOMAIN}`)"
      - "traefik.http.routers.dashboard-http.entrypoints=web"
      - "traefik.http.routers.dashboard-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    
    # Comando para usar la configuración de producción
    command:
      - "--configFile=/etc/traefik/traefik.prod.yml"

# Redes compartidas
networks:
  # Red pública: para servicios (external, definida en docker-compose.yml base)
  traefik-public:
    external: true
  
  # Red privada: solo para socket proxy
  # Nota: Esta red DEBE ser creada por docker-compose.socket-proxy.yml
  traefik-proxy:
    external: true
    name: traefik-proxy